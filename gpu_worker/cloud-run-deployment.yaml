# Cloud Run Service Configuration for Production Boltz-2 GPU Worker
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: boltz2-worker
  annotations:
    # Cost optimization
    run.googleapis.com/cpu-throttling: "false"
    run.googleapis.com/execution-environment: gen2
    # Observability
    run.googleapis.com/description: "Production Boltz-2 GPU Worker for Molecular Predictions"
spec:
  template:
    metadata:
      annotations:
        # Resource configuration for L4 GPU workloads
        run.googleapis.com/memory: "8Gi"
        run.googleapis.com/cpu: "4"
        run.googleapis.com/gpu-type: "nvidia-l4"
        run.googleapis.com/gpu-count: "1"
        # Scaling configuration
        autoscaling.knative.dev/minScale: "0"
        autoscaling.knative.dev/maxScale: "10"
        # Request timeout for long-running predictions
        run.googleapis.com/timeout: "1800s"
        # Concurrency for GPU workloads (1 job per instance)
        run.googleapis.com/cpu-boost: "true"
    spec:
      # Service account with proper permissions
      serviceAccountName: boltz2-gpu-worker@om-models.iam.gserviceaccount.com
      containerConcurrency: 1
      timeoutSeconds: 1800
      containers:
      - name: boltz2-worker
        image: gcr.io/om-models/boltz2-worker:v1
        ports:
        - name: http1
          containerPort: 8080
        env:
        # GCP Configuration
        - name: PROJECT_ID
          value: "om-models"
        - name: GCS_BUCKET_NAME
          value: "hub-job-files"
        - name: FIRESTORE_PROJECT_ID
          value: "om-models"
        # GPU Configuration
        - name: NVIDIA_VISIBLE_DEVICES
          value: "all"
        - name: CUDA_VISIBLE_DEVICES
          value: "0"
        - name: GPU_TYPE
          value: "L4"
        # Boltz-2 Configuration
        - name: BOLTZ_CACHE
          value: "/app/.boltz_cache"
        - name: TORCH_HOME
          value: "/app/.torch_cache"
        # Application Configuration
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "INFO"
        - name: WORKERS
          value: "1"
        - name: THREADS
          value: "1"
        # Performance Configuration
        - name: TOKENIZERS_PARALLELISM
          value: "false"
        - name: PYTHONUNBUFFERED
          value: "1"
        resources:
          limits:
            # L4 GPU with 24GB VRAM + 8GB system RAM
            memory: "8Gi"
            cpu: "4"
            nvidia.com/gpu: "1"
          requests:
            memory: "4Gi"
            cpu: "2"
            nvidia.com/gpu: "1"
        # Health checks optimized for GPU workloads
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 2
        startupProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 10
---
# Traffic configuration
apiVersion: serving.knative.dev/v1
kind: Configuration
metadata:
  name: boltz2-worker-traffic
spec:
  template:
    metadata:
      annotations:
        # Allow unauthenticated access (secured by Cloud Tasks)
        run.googleapis.com/ingress: "all"
        # Enable request logging
        run.googleapis.com/vpc-egress: "private-ranges-only"