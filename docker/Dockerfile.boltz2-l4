# Boltz-2 L4 GPU Optimized Container
# Distinguished Engineer Implementation - Production-ready container for Cloud Run

FROM nvidia/cuda:12.2.2-cudnn8-devel-ubuntu22.04

# Prevent interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3.11 \
    python3.11-dev \
    python3-pip \
    python3.11-venv \
    wget \
    curl \
    git \
    build-essential \
    cmake \
    libssl-dev \
    libffi-dev \
    libbz2-dev \
    libreadline-dev \
    libsqlite3-dev \
    libncurses5-dev \
    libncursesw5-dev \
    xz-utils \
    tk-dev \
    libxml2-dev \
    libxmlsec1-dev \
    libffi-dev \
    liblzma-dev \
    && rm -rf /var/lib/apt/lists/*

# Set Python 3.11 as default
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.11 1

# Upgrade pip
RUN python3 -m pip install --upgrade pip setuptools wheel

# Install PyTorch optimized for L4 (CUDA 12.1)
RUN pip install --no-cache-dir \
    torch==2.1.0+cu121 \
    torchvision==0.16.0+cu121 \
    torchaudio==2.1.0+cu121 \
    --index-url https://download.pytorch.org/whl/cu121

# Install Flash Attention 2 for L4 optimization
RUN pip install --no-cache-dir flash-attn==2.3.3 --no-build-isolation

# Install scientific computing libraries
RUN pip install --no-cache-dir \
    numpy==1.24.3 \
    scipy==1.11.3 \
    pandas==2.0.3 \
    scikit-learn==1.3.0 \
    matplotlib==3.7.2 \
    seaborn==0.12.2

# Install molecular modeling libraries
RUN pip install --no-cache-dir \
    rdkit==2023.9.1 \
    biopython==1.81 \
    mdanalysis==2.6.1 \
    openmm==8.0.0 \
    pdbfixer==1.9

# Install Boltz-2 and dependencies
RUN pip install --no-cache-dir \
    boltz==2.1.1 \
    alphafold-colabfold==1.5.5 \
    colabfold[alphafold]==1.5.5

# Install Google Cloud libraries
RUN pip install --no-cache-dir \
    google-cloud-storage==2.10.0 \
    google-cloud-firestore==2.13.1 \
    google-cloud-monitoring==2.16.0 \
    google-cloud-logging==3.8.0

# Install additional dependencies
RUN pip install --no-cache-dir \
    pyyaml==6.0.1 \
    requests==2.31.0 \
    aiohttp==3.8.6 \
    asyncio==3.4.3 \
    uvloop==0.17.0

# Create app directory
WORKDIR /app

# Copy Boltz-2 runner script
COPY backend/models/boltz2_cloud_run.py /app/boltz2_cloud_run.py

# Create necessary directories
RUN mkdir -p /app/data /app/models /app/cache /tmp/boltz2

# Set environment variables for L4 optimization
ENV CUDA_VISIBLE_DEVICES=0
ENV PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512
ENV TORCH_CUDNN_V8_API_ENABLED=1
ENV CUDA_LAUNCH_BLOCKING=0

# L4-specific optimizations
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility
ENV NVIDIA_REQUIRE_CUDA="cuda>=12.0"

# Memory management for 24GB VRAM
ENV PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:1024,roundup_power2_divisions:16

# Enable TF32 for L4 Ada Lovelace
ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1

# Set working directory permissions
RUN chmod -R 755 /app
RUN chmod +x /app/boltz2_cloud_run.py

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD python3 -c "import torch; print('CUDA available:', torch.cuda.is_available()); exit(0 if torch.cuda.is_available() else 1)"

# Default command
CMD ["python3", "/app/boltz2_cloud_run.py"]
