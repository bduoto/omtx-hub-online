[tool:pytest]
# Pytest configuration for OMTX-Hub

# Minimum pytest version
minversion = 6.0

# Test discovery patterns
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Add current directory to Python path
addopts = 
    --strict-markers
    --strict-config
    -ra
    --cov=backend
    --cov-report=term-missing
    --cov-report=html:tests/coverage_html
    --cov-report=xml:tests/coverage.xml
    --junitxml=tests/test-results.xml
    --tb=short
    --capture=no
    -v

# Markers for test categorization
markers =
    integration: marks tests as integration tests (may be slow)
    modal: marks tests that require Modal integration
    infrastructure: marks tests for infrastructure components
    slow: marks tests as slow running (>30 seconds)
    e2e: marks tests as end-to-end tests
    unit: marks tests as unit tests
    smoke: marks tests as smoke tests (quick validation)
    security: marks tests for security validation
    performance: marks tests for performance validation

# Async test configuration
asyncio_mode = auto

# Test timeouts
timeout = 300
timeout_method = thread

# Coverage configuration
[coverage:run]
source = backend
omit = 
    */tests/*
    */venv/*
    */env/*
    */__pycache__/*
    */migrations/*
    */debug/*
    */scripts/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# HTML coverage report configuration
[coverage:html]
directory = tests/coverage_html

# XML coverage report configuration  
[coverage:xml]
output = tests/coverage.xml